{"issues":[{"repo":"googleapis/gax-dotnet","number":93,"title":"Work out why we can't run the GAX tests with parallelism","body":"We've had to disable parallelism in GAX tests, as otherwise the FakeScheduler tests hang, although only on Travis... but it's not clear why. At some point, we should investigate that...\n","labels":[{"id":944788092,"node_id":"MDU6TGFiZWw5NDQ3ODgwOTI=","url":"https://api.github.com/repos/googleapis/gax-dotnet/labels/type:%20cleanup","name":"type: cleanup","color":"c5def5","default":false}]},{"repo":"googleapis/gax-dotnet","number":145,"title":"Verify proto behaviour when setting a field to an invalid value","body":"Unit or integration test to verify that the proto library behaves as expected when setting a field to an invalid value.\r\nE.g. setting a repeated field with a null element should fail.","labels":[{"id":944788124,"node_id":"MDU6TGFiZWw5NDQ3ODgxMjQ=","url":"https://api.github.com/repos/googleapis/gax-dotnet/labels/type:%20feature%20request","name":"type: feature request","color":"c5def5","default":false}]},{"repo":"googleapis/gax-dotnet","number":224,"title":"Can't get the current Project ID when running on my dev machine.","body":"https://github.com/googleapis/gax-dotnet/blob/3488c5b95f383e314d4a22390b599f07aa3057dc/src/Google.Api.Gax/Platform.cs#L543\r\n\r\nWhile I can get the Project ID when running on GAE, GCE or GKE I cannot use the same code to get the Project ID when running locally. That is what the `GOOGLE_CLOUD_PROJECT` environment variable is supposed to do for me.\r\n\r\nWe should have a 4th type of platform details that allow the code to run unchanged when running on the developer machine with only the `GOOGLE_CLOUD_PROJECT` environment variable set.","labels":[{"id":944788124,"node_id":"MDU6TGFiZWw5NDQ3ODgxMjQ=","url":"https://api.github.com/repos/googleapis/gax-dotnet/labels/type:%20feature%20request","name":"type: feature request","color":"c5def5","default":false}]},{"repo":"googleapis/gax-dotnet","number":233,"title":"monitored resource type \"container\" or \"gke_container\"?","body":"Hello,\r\n\r\nI tried to switch to using  `MonitoredResourceBuilder.FromPlatform()` now that [it's supposed to work for GKE]( https://github.com/googleapis/gax-dotnet/issues/209) but I'm getting this error:\r\n\r\n```\r\n....Monitoring.Stackdriver.Publisher Failed to create 1 timeseries status\r\nStatus(StatusCode=InvalidArgument, Detail=\"Field timeSeries[0].resource.type had an invalid value of \r\n\"container\": Unrecognized resource name.\"), dropping these. (108/108)\r\n```\r\nShould [`container` here](https://github.com/googleapis/gax-dotnet/blob/master/src/Google.Api.Gax.Grpc/MonitoredResourceBuilder.cs#L89) perhaps be `gke_container`?\r\n\r\nAs an experiment, I used:\r\n\r\n```\r\nvar monitoredResource = MonitoredResourceBuilder.FromPlatform();\r\nmonitoredResource.Type = \"gke_container\";\r\n```\r\n\r\nBut then I get another error!\r\n\r\n```\r\nKaggle.Monitoring.Stackdriver.Publisher Failed to create 1 timeseries status\r\nStatus(StatusCode=InvalidArgument, Detail=\"One or more TimeSeries could not be written: Unrecognized \r\nregion or location.: timeSeries[0]\")\r\n```\r\n\r\nLooking at the labels, the value for `zone` does look wrong (`projects/.../zones/us-...-d`), over what we used before (simply `us-...-d`):\r\n\r\nhttps://cloud.google.com/monitoring/api/resources#tag_gke_container isn't too useful in determining what this exactly should be, but I'd bet on the short name.\r\n\r\n=>\r\n\r\n```\r\nvar monitoredResource = MonitoredResourceBuilder.FromPlatform();\r\nmonitoredResource.Type = \"gke_container\";\r\nmonitoredResource.Labels[\"zone\"] = \"us-...-d\";\r\n```\r\n\r\nwhich works (can write time series and labels look ok to me).\r\n\r\nMy code looks a bit closer to what it should be, but I do feel I'm just trading one TODO for another here...\r\n","labels":[{"id":958354332,"node_id":"MDU6TGFiZWw5NTgzNTQzMzI=","url":"https://api.github.com/repos/googleapis/gax-dotnet/labels/:rotating_light:","name":":rotating_light:","color":"FFFFFF","default":false},{"id":320084224,"node_id":"MDU6TGFiZWwzMjAwODQyMjQ=","url":"https://api.github.com/repos/googleapis/gax-dotnet/labels/Type:%20bug","name":"Type: bug","color":"db4437","default":false},{"id":944788100,"node_id":"MDU6TGFiZWw5NDQ3ODgxMDA=","url":"https://api.github.com/repos/googleapis/gax-dotnet/labels/priority:%20p2","name":"priority: p2","color":"fef2c0","default":false}]},{"repo":"googleapis/gax-dotnet","number":227,"title":"Examples for using server streaming retry?","body":"Hi, I have generated a dotnet client for my gRPC service using artman/veneer toolkit, and have retries working for unary calls. I'm not quite grokking how retries should work for server streaming calls, although https://github.com/googleapis/gax-dotnet/commit/74a3598d7f71195712589cc53f277fa416d96a09 leads me to believe it should be possible.\r\n\r\nThe code below doesn't retry because the exception is raised in the call to MoveNext on the ResponseStream, rather than the in the call to the `Application` endpoint.\r\n\r\n```\r\nvar streamingResponse = streamsClient.Application(request);  // returns succesfully\r\nvar responseStream = streamingResponse.ResponseStream;\r\nwhile (await responseStream.MoveNext())\r\n{\r\n    var response = responseStream.Current;\r\n    // boom -> Grpc.Core.RpcException: 'Status(StatusCode=Unavailable, Detail=\"Connect Failed\")'\r\n}\r\n```\r\n\r\nI would expect this exception to be retried, given my RetryFilter predicate:\r\n```\r\n        public static Predicate<RpcException> RetryFilter { get; } =\r\n            RetrySettings.FilterForStatusCodes(StatusCode.DeadlineExceeded, StatusCode.Unavailable);\r\n```\r\n\r\nI've looked through several of the dotnet googleapis for an example, but haven't found anything. Am I using this code incorrectly, or is something misconfigured?\r\n\r\nApologies if this should be on Stack Overflow or elsewhere, it just seemed I would be more likely to get a response here....","labels":[{"id":944788093,"node_id":"MDU6TGFiZWw5NDQ3ODgwOTM=","url":"https://api.github.com/repos/googleapis/gax-dotnet/labels/type:%20question","name":"type: question","color":"c5def5","default":false}]}]}